<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <bean id="target" class="alan.aop.NaiveWaiter"/>
    <bean id="greetingAdvice" class="alan.aop.基于接口.GreetingBeforeAdvice"/>


    <!--BeanNameAutoProxyCreator 依赖多个增强类 产生代理类-->
    <bean id="greetingAdvisor" class="alan.aop.基于接口.GreetingAdvisor" p:advice-ref="greetingAdvice"/>
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"
          p:beanNames="target"
          p:interceptorNames="greetingAdvice"
          p:optimize="true"/>

        <!--使用正则表达式切面-->
<!--        <bean id="regexpAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"-->
<!--              p:patterns=".*greet.*"-->
<!--              p:advice-ref="greetingAdvice"/>-->

<!--        <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
<!--              p:proxyTargetClass="true"/>-->
</beans>